#T1Pro

####################################################################################################
#motor part
####################################################################################################
[stepper_a]
step_pin: PE5
dir_pin: !PD7  # motor direction pin
enable_pin: !PE1
microsteps: 32
rotation_distance: 60
endstop_pin: ^PD4
homing_speed: 40
#position_endstop: 332
#arm_length = 335

[stepper_b]
step_pin: PB9
dir_pin: !PC7  # motor direction pin
enable_pin: !PD3
microsteps: 32
rotation_distance: 60
endstop_pin: ^PD14
#position_endstop: 332
#arm_length = 335

[stepper_c]
step_pin: PB8
dir_pin: !PE15  # motor direction pin,"!PE2" and "PE2" represent different directions
enable_pin: !PD13
microsteps: 32
rotation_distance: 60 #rotation_distance = <full_steps_per_rotation> * <microsteps> / <steps_per_mm>, 
endstop_pin: ^PE10
#position_endstop: 332 # printer printable height
#arm_length = 335

[extruder]
step_pin: PD15
dir_pin: !PB0
enable_pin: !PB1
microsteps: 16
rotation_distance: 4.5
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA5
sensor_type: Generic 3950
pullup_resistor: 510
sensor_pin: PA4
min_temp: -200 # extruder min temp
max_temp: 320 # extruder max temp
max_extrude_cross_section: 50 # default 0.640
max_extrude_only_distance: 500
pressure_advance: 0.025 
#pressure_advance: 0.041
control:pid
pid_Kp: 14.155
pid_Ki: 0.303
pid_Kd: 165.086

[tmc5160 stepper_c]
cs_pin: PD9
spi_software_sclk_pin:PD10
spi_software_miso_pin:PD8
spi_software_mosi_pin:PD11
#spi_speed:100000
sense_resistor: 0.0375
run_current: 3
hold_current: 1.6
stealthchop_threshold: 0
interpolate: true

[tmc5160 stepper_a]
cs_pin: PB4
spi_software_sclk_pin:PE0
spi_software_miso_pin:PB3
spi_software_mosi_pin:PD5
#spi_speed:100000
sense_resistor: 0.0375
run_current: 3
hold_current: 1.6
stealthchop_threshold: 0
interpolate: true

[tmc5160 stepper_b]
cs_pin: PC6
spi_software_sclk_pin:PD0
spi_software_miso_pin:PA8
spi_software_mosi_pin:PD1
#spi_speed:100000
sense_resistor: 0.0375
run_current: 3
hold_current: 1.6
stealthchop_threshold: 0
interpolate: true

[tmc5160 extruder]
cs_pin:PC4
spi_software_sclk_pin:PA7
spi_software_mosi_pin:PA6
spi_software_miso_pin:PC5
sense_resistor: 0.0375
run_current: 1.2
hold_current: 0.3 # motor hold current

####################################################################################################
#mcu ,pin
####################################################################################################
[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[fan]
pin: !PE6
cycle_time: 0.0001
max_power: 0.6

[heater_fan heat_sink_fan] 
pin: PE8
heater_temp: 50.0

[heater_bed]
heater_pin: PA2
sensor_pin: PA1
sensor_type: Generic 3950
min_temp: -5
max_temp: 130 #hotbed max temp
control:pid
pid_Kp: 18.240
pid_Ki: 0.558
pid_Kd: 149.109

[temperature_sensor Armv7 mcu] #the temp of pad
sensor_type: temperature_host
min_temp: -50
max_temp: 100

[temperature_sensor mcu_temp] #the temp of mcu
sensor_type: temperature_mcu
min_temp: -50
max_temp: 100

[input_shaper]
#shaper_freq_x: 34.78   # frequency for the X mark of the test model
#shaper_freq_y: 31.68  # frequency for the Y mark of the test model

[filament_switch_sensor filament_sensor]
pause_on_runout: False
runout_gcode: 
    M117 Filament Runout Detected!
    PAUSE
switch_pin: !PE7
helper:RunoutDebounceHelper
event_delay: 0.0001

[printer]
kinematics: delta
max_velocity: 1000 #max print speed ,default is 400mm/s
max_accel: 30000 
max_accel_to_decel: 8000
square_corner_velocity: 5 
max_z_velocity: 1000
#delta_radius: 171.2 # delta radius,default is 171.2
print_radius: 133 #max printable radius
minimum_z_position:-5 # min z position nozzle won't go to the position which Z lower the vaule
normal_minimum_z_position: -2.0 # The minimum z that can be set during normal movement

################################################################################################################
#calibrate and bed_mesh
################################################################################################################
[delta_calibrate]
radius: 120
horizontal_move_z: 10 #This value is related to the lift height of the nozzle during delta_calibrate
Speed: 100

[probe]
pin: !PA3
x_offset: 0 
y_offset: 0 
z_offset: -0.18 #the distance between nozzle and level switch
speed: 10
samples: 2 #probe one point three times get an average
samples_result: average
sample_retract_dist: 5
samples_tolerance: 0.05 # precision
samples_tolerance_retries: 5 

[bed_mesh]
speed: 50
horizontal_move_z: 7 #This value is related to the lift height of the nozzle during bed_mesh
mesh_radius: 125
mesh_origin: 0,0
round_probe_count: 7 # 7*7
algorithm: bicubic
fade_start: 0.2
fade_end: 0.0
fade_target: 0

#############################################################################################################
#GCODE
#############################################################################################################
[output_pin relay_pin]
pin: PD6
pwm: False
value: 0

[gcode_macro relay_on]
gcode:
    SET_PIN PIN=relay_pin VALUE=1

[gcode_macro relay_off]
gcode:
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    SET_PIN PIN=relay_pin VALUE=0

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.025 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.025 MOVE=1

[output_pin BOXFAN_pin]
pin: PE2
pwm: False
value: 0
[gcode_macro boxfan_on]
gcode:
    SET_PIN PIN=BOXFAN_pin VALUE=1

[gcode_macro boxfan_off]
gcode:
    SET_PIN PIN=BOXFAN_pin VALUE=0

[gcode_macro MEASURING_RESONANCES] #检测共振
description: Measuring Resonances
gcode: 
     M117 MEASURING RESONANCES START !
     G28
     SHAPER_CALIBRATE
     G28
     SAVE_VARIABLE VARIABLE=resonances_state VALUE=True
     G4 P1000
     SAVE_CONFIG

[gcode_macro bed_level_1]
gcode:
    SET_GCODE_OFFSET Z=0
    M117 BED LEVEL START !
    G28
    M204 S200
    M104 S160
    M140 S70
    M109 S160
    M190 S70
    delta_calibrate
    G1 X0 Y0 Z50 F4200
    M104 S0
    M140 S0
    G28
    F104 K=level_state V=True
    save_config

[gcode_macro bed_level_2]
gcode:
    G28
    M204 S200
    M104 S160
    M140 S70
    M109 S160
    M190 S70
    G1 X0 Y0 Z50 F4200
    bed_mesh_calibrate
    G1 X0 Y0 Z50 F4200
    M104 S0
    M140 S0
    G28
    F104 K=level2_state V=True
    save_config

[gcode_macro UNLOAD_FILAMENT] #unload filament
gcode:
    {% set speed_factor = printer.gcode_move.speed_factor|float %}
    {% set extrude_factor = printer.gcode_move.extrude_factor|float %}
    M117 unload_filament heating completed!
    G91
    M220 S100   # set speed_factor to normal
    M221 S100   # set extrude_factor to normal
    G1 E10 F300
    G1 E-100 F800
    # G1 E-100 F200
    M400
    M220 S{speed_factor*100} # recover speed_factor
    M221 S{extrude_factor*100} # recover extrude_factor
    G90
    M117 unload_filament done!

[gcode_macro LOAD_FILAMENT] #load filament
gcode:
    {% set speed_factor = printer.gcode_move.speed_factor|float %}
    {% set extrude_factor = printer.gcode_move.extrude_factor|float %}

    M117 load_filament heating completed!
    G91
    M220 S100    # set speed_factor to normal
    M221 S100    # set extrude_factor to normal
    G1 E70 F800
    G1 E30 F300
    M400
    M220 S{speed_factor*100}  # recover speed_factor
    M221 S{extrude_factor*100}  # recover extrude_factor
    G90
    M117 load_filament done!

[gcode_macro M600]
gcode:
    PAUSE

[gcode_macro TMC]
gcode:
    DUMP_TMC STEPPER=stepper_a
    DUMP_TMC STEPPER=stepper_b
    DUMP_TMC STEPPER=stepper_c
    DUMP_TMC STEPPER=extruder

[gcode_macro save_time]
gcode:
    {% if printer.save_variables.variables.total_time %}
        {% set print_time = printer.save_variables.variables.total_time %}
    {% else %} 
        {% set print_time = 0 %}
    {% endif %}
    {% set print_time = print_time + printer.print_stats.print_duration/3600 %}
    SAVE_VARIABLE VARIABLE=total_time VALUE={print_time}

[gcode_macro SET_GCODE_OFFSET]
rename_existing: _SET_GCODE_OFFSET
gcode:
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}
    {% else %} 
        {% set offsets = {'x': None,'y': None,'z': None} %}
    {% endif %}
    {% set ns = namespace(offsets={'x': offsets.x,'y': offsets.y,'z': offsets.z}) %}
    {%if 'X' in params %}{% set null = ns.offsets.update({'x': params.X}) %}{% endif %}
    {%if 'Y' in params %}{% set null = ns.offsets.update({'y': params.Y}) %}{% endif %}
    {%if 'Z' in params %}{% set null = ns.offsets.update({'z': params.Z}) %}{% endif %}
    {%if 'Z_ADJUST' in params %}
        {%if ns.offsets.z == None %}{% set null = ns.offsets.update({'z': 0}) %}{% endif %}
        {% set null = ns.offsets.update({'z': (ns.offsets.z | float) + (params.Z_ADJUST | float)}) %}
    {% endif %}
    {% set z_offset_min = (-0.10001|float) %}
    {% set z_offset_max = (0.10001|float) %}
    {% if (ns.offsets.z | float) <= z_offset_max and (ns.offsets.z | float) >= z_offset_min %}
        _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}
        SAVE_VARIABLE VARIABLE=gcode_offsets VALUE="{ns.offsets}"
    {% else %}
        M117 Z_ADJUST out of range,available range is { z_offset_min } to { z_offset_max }!
    {% endif %}

[delayed_gcode LOAD_GCODE_OFFSETS]
initial_duration: 2
gcode:
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}

        _SET_GCODE_OFFSET {% for axis, offset in offsets.items() if offsets[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}

        { action_respond_info("Loaded gcode offsets from saved variables [%s]" % (offsets)) }
    {% endif %}|
    {% if printer.save_temp_variables.variables.level_state %}
        F104 K=level_state V=False
        M117 BedLevel1 Done
        bed_level_2
    {% endif %}|
    {% if printer.save_temp_variables.variables.level2_state %}
        F104 K=level2_state V=False
        M117 BedLevel Done
    {% endif %}|
    {% if printer.save_variables.variables.resonances_state %}
        SAVE_VARIABLE VARIABLE=resonances_state VALUE=False
        G28
        M117 Vibration Compensation Done
    {% endif %}
    SAVE_VARIABLE VARIABLE=plr_flag VALUE=False

[delayed_gcode LOAD_FUNCTION_SWITCH_DELAY]
initial_duration: 0.2
gcode:  
    LOAD_FUNCTION_SWITCH

[idle_timeout]
gcode:
#     A list of G-Code commands to execute on an idle timeout. See
#     docs/Command_Templates.md for G-Code format. The default is to run
#     "TURN_OFF_HEATERS" and "M84".
timeout: 172800
#     Idle time (in seconds) to wait before running the above G-Code
#     commands. The default is 600 seconds.

####################################################################################################################################
#PAUSE ,RESUME ,CANCEL_PRINT
####################################################################################################################################
[pause_resume]

[gcode_macro PAUSE] 
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% if printer.print_stats.state == "printing" %}
        {% set x = params.X|default(0) %}      #edit to your park position
        {% set y = params.Y|default(-110) %}      #edit to your park position
        {% set z = params.Z|default(10)|float %} #edit to your park position
        {% set e = params.E|default(1) %}        #edit to your retract length

        ##### calculate save lift position #####
        {% set max_z = printer.toolhead.axis_maximum.z|float %}
        {% set homed_z = printer.gcode_move.homing_origin[2]|float %}
        {% set limit_z = (max_z - homed_z)|round(4,'floor') %}
        {% set act_z = printer.toolhead.position.z|float %}
        {% set lift_z = z|abs %}

        ### If the current position is greater than max_z-60, xy is set to 0###
        ### Normally, the max_z-limit_z is around 46mm,now expand 50mm###
        {% if act_z >= limit_z - 60 %}
            {% set x = 0 %}
            {% set y = 0 %}
            {% set toohigh = true %}
        {% else %}
            {% set toohigh = false %}
        {% endif %}

        {% if act_z < (limit_z - lift_z) %}
            {% set z_safe = act_z + lift_z %}
        {% else %}
            {% set z_safe = limit_z %}
        {% endif %}

        {% set fan_speed = printer.fan.speed|float %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=fan_speed VALUE={fan_speed}
        ##### end of definitions #####
        PAUSE_BASE
        G91
        # if within exclude range,exit exclude object first
        {% set current_object = printer.exclude_object.current_object %}
        {% if current_object in printer.exclude_object.excluded_objects %}
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=exclude_object VALUE='"{current_object}"'
            EXCLUDE_OBJECT_END NAME={current_object}
        {% endif %}
        {% if printer.extruder.can_extrude|lower == 'true' %}
            G1 E-{e} F2100
        {% else %}
            {action_respond_info("Extruder not hot enough")}
        {% endif %}
        {% if "xyz" in printer.toolhead.homed_axes %}
            G90
            {% if toohigh == true %}
                {% if act_z > z_safe - 1 %}
                    M117 Current position is too high and not move
                {% else %}    
                    G1 X{x} Y{y} Z{z_safe} F{pause_speed}
                    M117 Current position is too high,pause and move to X={ x } Y={ y } Z={ z_safe }
                {% endif %}
            {% else %}
                # Move the Z-axis to a safe height to avoid collision with the bed or other objects 
                G1 z{z_safe} F6000
                # Move the X and Y axes to the specified position
                G1 X{x} Y{y} F6000
                # clear bed_mesh Z fade height
                G1 X{x} Y{y} F6000
                M117 Pause and move to X={ x } Y={ y } Z={ z_safe }
            {% endif %}
        {% else %}
            {action_respond_info("Printer not homed")}
        {% endif %}
        {% set nozzle_temp = printer.extruder.target|float %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=nozzle_temp VALUE={nozzle_temp}
        M104 S90
        {% set bed_temp = printer.heater_bed.target|float %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=bed_temp VALUE={bed_temp}
        M106 S0
        F108
        M400
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
variable_fan_speed: 0
variable_nozzle_temp: 0
variable_bed_temp: 0
variable_exclude_object: "empty"
gcode:
    ##### set defaults #####
    {% if printer.print_stats.state == "paused" %}
        M140 S{bed_temp}
        M109 S{nozzle_temp}
        {% set e = params.E|default(1) %} #edit to your retract length
        #### get VELOCITY parameter if specified ####
        {% if 'VELOCITY' in params|upper %}
            {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
        {%else %}
            {% set get_params = "" %}
        {% endif %}
        ##### end of definitions #####
        G91
        {% if nozzle_temp >= 180 %}
            G1 E{e} F2100
        {% else %}
            {action_respond_info("Extruder not hot enough")}
        {% endif %}
        G90
        M400
        RESUME_BASE {get_params}
        {% if exclude_object != "empty" %}
        EXCLUDE_OBJECT_START NAME={exclude_object}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=exclude_object VALUE='"empty"'
        {% endif %}
        {% set fan_speed = fan_speed / printer.fan.max_power * 255 %}
        M106 S{fan_speed}
    {% endif %}

[force_move]
enable_force_move: True

[gcode_macro RESTORE_E_CURRENT]
gcode:
    SET_TMC_CURRENT STEPPER=extruder CURRENT=1.2
##############################################################################################
##############################################################################################
[gcode_macro START_PRINT]
gcode:
    relay_on
    {% set sd_filename = printer.virtual_sdcard.file_path|string %}
    SAVE_VARIABLE VARIABLE=sd_filename VALUE='"{sd_filename}"'
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True
    SAVE_VARIABLE VARIABLE=file_position VALUE=0
    SAVE_VARIABLE VARIABLE=x_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=y_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=z_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=e_pos VALUE=0.0
    SET_TMC_CURRENT STEPPER=extruder CURRENT=0.8
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=0
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=exclude_object VALUE='"empty"'
    CLEAR_PAUSE
    M105 S1
    boxfan_on
    G28

[gcode_macro _CLEAN_EXCLUDE_OBJECT]
gcode:
    # clean resume record
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=exclude_object VALUE='"empty"'
    # exclude object end
    {% set current_object = printer.exclude_object.current_object %}
    {% if current_object in printer.exclude_object.exclude_objects %}
        EXCLUDE_OBJECT_END NAME={current_object}
    {% endif %}

[gcode_macro END_PRINT]
gcode:
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    boxfan_off
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=100
    _CLEAN_EXCLUDE_OBJECT

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    _CLEAN_EXCLUDE_OBJECT
    F100
    M106 S0
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    M105 S1
    G28
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    boxfan_off
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=100

[delayed_gcode heatsink]
initial_duration: 0 #if initial_duration is zero, the delayed gcode won't start by default
gcode:
    M106 S0
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=0
###########################################################################################################################
###########################################################################################################################
[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode:
    M106 S0
    TURN_OFF_HEATERS
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    boxfan_off
    _CLEAN_EXCLUDE_OBJECT

[save_variables]
filename: ~/savedVariables1.cfg

[rotate_logger]
filename: ~/klipper_logs/mylog.txt
max_bytes: 1048576
backup_count: 3

[gcode_arcs]

[include timelapse.cfg] #Load the camera recording function

[display_status]

[resonance_tester]
probe_points:0, 0, 20
accel_chip: adxl345
min_freq: 30
max_freq: 50
accel_per_hz: 250

[adxl345]
cs_pin:PE11
spi_software_sclk_pin:PE14
spi_software_mosi_pin:PE13
spi_software_miso_pin:PE12
rate:1600

###########################################################################################################################
# M106
###########################################################################################################################
[gcode_macro M106]
description: fan speed control
rename_existing: M106.1
gcode:
    {% set last_fan_speed = printer.fan.speed|float %}
    {% set max_power = printer.fan.max_power|float %}
    {% set last_fan_value = last_fan_speed/max_power %}
    {% set fan_speed = params.S|default(255)|int %}
    {% if last_fan_value < 0.1 and fan_speed > 100 %}
        M106.1 S60
        SET_GCODE_VARIABLE MACRO=set_fan VARIABLE=fan_speed VALUE={fan_speed}
        UPDATE_DELAYED_GCODE ID=setfan DURATION=2
    {% else %}
        M106.1 S{fan_speed}
    {% endif %}
[gcode_macro set_fan]
variable_fan_speed: 0
gcode:
    M106.1 S{fan_speed}
[delayed_gcode setfan]
initial_duration: 0 #if initial_duration is zero, the delayed gcode won't start by default
gcode:
    set_fan
    UPDATE_DELAYED_GCODE ID=setfan DURATION=0
    
[exclude_object]

[power_loss_recover]

[save_temp_variables]
filename: ~/temp/tempVariables.cfg

[box_light]

[locate_printing_gcode]
queue_size: 500
e_offset: 13.5

[printer_workmode]
silent_stealthchop: 0
silent_extruder_run_current: 1.2
silent_step_abc_run_current: 3


# EXP1 / EXP2 (display) pins
#[board_pins]
#aliases:
    # EXP1 header
#    EXP1_1=PC1, EXP1_3=PA4, EXP1_5=PA6, EXP1_7=PC4, EXP1_9=<GND>,
#    EXP1_2=PC3, EXP1_4=PA5, EXP1_6=PA7, EXP1_8=PC5, EXP1_10=<5V>,
    # EXP2 header
#    EXP2_1=PB14, EXP2_3=PB11, EXP2_5=PB0,  EXP2_7=PC10,  EXP2_9=<GND>,
#    EXP2_2=PB13, EXP2_4=PA15, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>

############################################################################################################################
############################################################################################################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [printer]
#*# delta_radius = 171.220345
#*#
#*# [stepper_a]
#*# angle = 210.820379
#*# arm_length = 335.000000
#*# position_endstop = 332.000000
#*#
#*# [stepper_b]
#*# angle = 329.328325
#*# arm_length = 335.000000
#*# position_endstop = 332.000000
#*#
#*# [stepper_c]
#*# angle = 90.000000
#*# arm_length = 335.000000
#*# position_endstop = 332.000000
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*#     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
#*#     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
#*#     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
#*#     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
#*#     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
#*#     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
#*#     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
#*# tension = 0.2
#*# min_x = -99.99
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = -99.99
#*# x_count = 7
#*# max_y = 99.99
#*# mesh_x_pps = 2
#*# max_x = 99.99
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 14.155
#*# pid_ki = 0.303
#*# pid_kd = 165.086
#*#
#*# [heater_bed]
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 40.4
#*# shaper_type_y = mzv
#*# shaper_freq_y = 39.8
#*#
#*# [delta_calibrate]
#*# height0 = -0.2
#*# height0_pos = 34638.000,34734.000,34650.000
#*# height1 = -0.2
#*# height1_pos = 41812.333,41561.333,29904.333
#*# height2 = -0.2
#*# height2_pos = 33450.000,46106.000,33283.000
#*# height3 = -0.2
#*# height3_pos = 30169.000,40638.000,40472.333
#*# height4 = -0.2
#*# height4_pos = 33116.333,33401.333,42519.333
#*# height5 = -0.2
#*# height5_pos = 39267.000,30568.000,39464.000
#*# height6 = -0.2
#*# height6_pos = 44204.667,33337.667,33312.667
